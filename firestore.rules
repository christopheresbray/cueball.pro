rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to all data
    match /{document=**} {
      allow read: if true;
    }
    
    // Admin users can write to all collections
    match /{collection}/{document=**} {
      allow write: if request.auth != null && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Team captains can update their team's matches and related data
    match /matches/{matchId} {
      allow update: if request.auth != null && 
                    (exists(/databases/$(database)/documents/teams/$(resource.data.homeTeamId)) && 
                     get(/databases/$(database)/documents/teams/$(resource.data.homeTeamId)).data.captainId == request.auth.uid || 
                     exists(/databases/$(database)/documents/teams/$(resource.data.awayTeamId)) && 
                     get(/databases/$(database)/documents/teams/$(resource.data.awayTeamId)).data.captainId == request.auth.uid);
    }
    
    match /frames/{frameId} {
      allow update: if request.auth != null && 
                    exists(/databases/$(database)/documents/matches/$(resource.data.matchId)) &&
                    (exists(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/matches/$(resource.data.matchId)).data.homeTeamId)) && 
                     get(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/matches/$(resource.data.matchId)).data.homeTeamId)).data.captainId == request.auth.uid ||
                     exists(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/matches/$(resource.data.matchId)).data.awayTeamId)) && 
                     get(/databases/$(database)/documents/teams/$(get(/databases/$(database)/documents/matches/$(resource.data.matchId)).data.awayTeamId)).data.captainId == request.auth.uid);
    }
    
    // Allow authenticated users to update their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}